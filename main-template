{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Username": {
            "type": "string",
            "defaultValue": "sysgain",
            "metadata": {
                "description": "The name of the administrator account of the new VM and domain"
            }
        },
        "Password": {
            "type": "securestring",
            "defaultValue": "Sysgain@123456",
            "metadata": {
                "description": "The password for the administrator account of the new VM and domain"
            }
        },
        "sqlStorageWorkloadType": {
            "type": "string",
            "defaultValue": "GENERAL",
            "allowedValues": [
                "GENERAL",
                "OLTP",
                "DW"
            ]
        },
        "sqlAutopatchingDayOfWeek": {
            "type": "string",
            "allowedValues": [
                "Everyday",
                "Never",
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
            ],
            "defaultValue": "Sunday"
        },
        "sqlAutopatchingStartHour": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Auto Patching Starting Hour"
            },
            "allowedValues": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15",
                "16",
                "17",
                "18",
                "19",
                "20",
                "21",
                "22",
                "23"
            ],
            "defaultValue": "2"
        },
        "sqlAutopatchingWindowDuration": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Auto Patching Duration Window in minutes"
            },
            "allowedValues": [
                "30",
                "60",
                "90",
                "120",
                "150",
                "180"
            ],
            "defaultValue": "60"
        }
    },
    "variables": {
        "sqlserversettings": {
            "location": "[resourceGroup().location]",
            "storageApiVersion": "2016-01-01",
            "computeApiVersion": "2016-04-30-preview",
            "networkApiVersion": "2016-09-01",
            "adminUsername": "sqluser",
            "adminPassword": "Sysgain@1234",
            "virtualNetworkName": "[variables('networkSettings').virtualNetworkName]",
            "networkInterfaceName": "sqlNic",
            "networkSecurityGroupName": "sqlNsg",
            "subnetName": "[variables('networkSettings').subnet3Name]",
            "publicIpAddressName": "sqlpip",
            "sqlAuthenticationLogin": "sqluser",
            "sqlAuthenticationPassword": "Sysgain@1234",
            "sqlStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'sqlvm')]",
            "sqlservername": "sqlvm",
            "vmSize": "Standard_DS1_v2",
            "sqlConnectivityType": "Private",
            "sqlStorageDisksCount": "1",
            "sqlStorageWorkloadType": "[parameters('sqlStorageWorkloadType')]",
            "sqlAutopatchingDayOfWeek": "[parameters('sqlAutopatchingDayOfWeek')]",
            "sqlAutopatchingStartHour": "[parameters('sqlAutopatchingStartHour')]",
            "sqlAutopatchingWindowDuration": "[parameters('sqlAutopatchingWindowDuration')]",
            "sqlStorageDeploymentToken": "456",
            "managedDiskName": "[variables('managedDiskName')]",
            "scriptFileName": "[variables('scriptFileName')]",
            "scriptFileName2": "defaultdb.ps1",
            "scriptFileName3": "simulatorsetup.ps1",
            "domainName": "[variables('domainName')]",
            "Username": "[parameters('Username')]",
            "Password": "[parameters('Password')]",
            "fileUris": "[concat(variables('baseUrl'),'scripts/psscript.ps1')]",
            "fileUris2": "[concat(variables('baseUrl'),'scripts/defaultdb.ps1')]",
            "fileUris3": "[concat(variables('baseUrl'),'scripts/simulatorsetup.ps1')]",
            "sqlQueryUrl": "[concat(variables('baseUrl'),'scripts/SQLQuery2.sql')]",
            "piserverscript": "[concat(variables('baseUrl'),'scripts/PiServerSQLscript.sql')]",
            "databaseName": "iottestdb",
            "simulatorUrl": "https://projectiot.blob.core.windows.net/iotp1/SimulatorSetup.msi"
        },
        "AzurePaasevi": {
            "AzureSqlLogin": "azurelogin",
            "AzureSqlPwd": "Sysgain@1234",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "databaseName": "dbtest",
            "edition": "Standard",
            "requestedServiceObjectiveName": "S2",
            "maxSizeBytes": "268435456000",
            "serverName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
            "storageKeyType": "SharedAccessKey",
            "storageKey": "?"
        },
        "networkSettings": {
            "location": "[resourceGroup().location]",
            "networkApiVersion": "2016-03-30",
            "virtualNetworkName": "vnet",
            "addressPrefix": "10.0.0.0/16",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.0.0/24",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.1.0/24",
            "subnet3Name": "subnet3",
            "subnet3Prefix": "10.0.2.0/24",
            "subnet4Name": "subnet4",
            "subnet4Prefix": "10.0.3.0/24"
        },
        "baseUrl": "https://raw.githubusercontent.com/sysgain/iot-automation/dev/",
        "dscScriptUrl": "https://github.com/sysgain/iot-automation/raw/dev",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('networkSettings').virtualNetworkName)]",
        "adsubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('networkSettings').subnet2Name)]",
        "virtualNetworksResourcesURL": "[concat(variables('baseUrl'),'nested/virtualNetwork.json')]",
        "adLBFE": "LBFE",
        "adLBBE": "LBBE",
        "adRDPNAT": "adRDP",
        "adNicName": "adNic",
        "adNicIPAddress": "10.0.1.4",
        "adVMName": "adVM",
        "publicIPAddressName": "adPublicIP",
        "adAvailabilitySetName": "adAvailabiltySet",
        "adLBName": "adLoadBalancer",
        "scriptFileName": "psscript.ps1",
        "prefix": "[uniqueString(resourceGroup().id)]",
        "dnsPrefix": "[concat('dns',substring(variables('prefix') ,0 ,5))]",
        "domainName": "iottests.com",
        "managedDiskName": "datadisk",
        "count": 2,
        "storageAccountType": "Premium_LRS",
        "diskCreateOption": "empty",
        "diskSizeGB": "1023",
        "computeApiVersion": "2016-04-30-preview",
        "networkApiVersion": "2016-03-30",
        "deploymentApiVersion": "2016-02-01"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "sku": {
                "name": "Aligned"
            },
            "name": "[variables('adAvailabilitySetName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2
            }
        },
        {
            "name": "virtualNetworksResource",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('virtualNetworksResourcesURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('adLBName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('adLBFE')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('adLBBE')]"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('adRDPNAT')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('adLBName'), variables('adLBFE'))]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 3389,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('adNicName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "virtualNetworksResource",
                "[resourceId('Microsoft.Network/loadBalancers', variables('adLBName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('adNicIPAddress')]",
                            "subnet": {
                                "id": "[variables('adsubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('adLBName'), variables('adLBBE'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('adLBName'), variables('adRDPNAT'))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('adVMName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('adLBName'))]",
                "[resourceId('Microsoft.Compute/disks', concat(variables('managedDiskName'),'0'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS2_v2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[variables('adVMName')]",
                    "adminUsername": "[parameters('Username')]",
                    "adminPassword": "[parameters('Password')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('managedDiskName'),'0')]",
                            "createOption": "Attach",
                            "lun": 0,
                            "caching": "None",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks',concat(variables('managedDiskName'),'0'))]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "CreateADForest",
                    "apiVersion": "[variables('computeApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('adVMName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[concat(variables('dscScriptUrl'), '/DSC/CreateADPDC.zip')]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[variables('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('Username')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('Password')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "UpdateVNetDNS",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('adVMName'), 'CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/vnetdns.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('adNicIPAddress')]"
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "sqlServerSetup",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "virtualNetworksResource",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('adVMName'))]",
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('adVMName'), 'CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sqlserver.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlserversettings": {
                        "value": "[variables('sqlserversettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "sqlDbSetup",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "sqlServerSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sqldatabase.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlserversettings": {
                        "value": "[variables('sqlserversettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "sqlSimulatorSetup",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "sqlDbSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sqlsimulator.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlserversettings": {
                        "value": "[variables('sqlserversettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "AzuresqlServerSetup",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "sqlSimulatorSetup"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/azurepaas.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "AzurePaasevi": {
                        "value": "[variables('AzurePaasevi')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/disks",
            "name": "[concat(variables('managedDiskName'),copyIndex())]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "dataDiskCopy",
                "count": "[variables('count')]"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]",
                "creationData": {
                    "createOption": "[variables('diskCreateOption')]"
                },
                "diskSizeGB": "[variables('diskSizeGB')]"
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[reference('sqlServerSetup').outputs.adminUsername.value]"
        },
        "listKeysOutput": {
            "type": "string",
            "value": "[reference('sqlServerSetup').outputs.listKeysOutput.value]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[reference('sqlServerSetup').outputs.storageAccountName.value]"
        },
         "azureSqlServerName":{
            "type": "string",
            "value": "[reference('AzuresqlServerSetup').outputs.azureSqlServerName.value]"
        },
        "azureDBName":{
            "type": "string",
            "value": "[reference('AzuresqlServerSetup').outputs.azureDBName.value]"
        }
    }
}
