{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "adminuser",
            "metadata": {
                "description": "Username for all the Virtual Machines."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "Password@1234",
            "metadata": {
                "description": "Password for all the Virtual Machines."
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "sysgainiot.com",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created on VM"
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "defaultValue": "sqluser",
            "metadata": {
                "description": "The admin user of the Azure SQL Server"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "Password@1234",
            "metadata": {
                "description": "The password of the admin user of the Azure SQL Server"
            }
        },
        "sqldatabasename": {
            "type": "string",
            "defaultValue": "sqldatabase",
            "metadata": {
                "description": "The name of Azure SQL database"
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "metadata": {
                "description": "Describes plan's instance count"
            }
        },
        "hostingPlanName": {
            "type": "string",
            "defaultValue": "AppServPlan",
            "metadata": {
                "description": "Describes Hosting plan's name"
            }
        },
        "webSiteName": {
            "type": "string",
            "defaultValue": "phase21iotappsri",
            "metadata": {
                "description": "Describes webSite name which should be unique"
            }
        },
        "apiServerName": {
            "type": "string",
            "defaultValue": "apiserverapi322",
            "metadata": {
                "description": "Describes API Server name which should be unique"
            }
        },
        "emailHost": {
            "type": "string",
            "defaultValue": "ermhost",
            "metadata": {
                "description": "Describes the host name for sending email notifications"
            }
        },
        "emailHostPort": {
            "type": "string",
            "defaultValue": "25",
            "metadata": {
                "description": "Describes the port number for email host"
            }
        },
        "senderEmail": {
            "type": "string",
            "defaultValue": "ermhost@ermdeploy.com",
            "metadata": {
                "description": "Describes the email ID of the sender for email notifications"
            }
        },
        "senderEmailPassword": {
            "type": "string",
            "defaultValue": "Password@1234",
            "metadata": {
                "descrition": "Describes the password for sender email ID for email notifications"
            }
        },
        "b2cTenant": {
            "type": "string",
            "defaultValue": "testiot22.onmicrosoft.com",
            "metadata": {
                "description": "Describes B2C Tenant Name Directory"
            }
        },
        "b2cClientId": {
            "type": "string",
            "defaultValue": "ca10d7a5-71eb-4dd8-aaa2-b2c534c202a1",
            "metadata": {
                "description": "Describes the client Id of the application registered in B2C Directory"
            }
        },
        "b2cClientSecret": {
            "type": "string",
            "defaultValue": "{XIs91_*|g1XY4b8",
            "metadata": {
                "description": "Describes the Client secret of the application registered in B2C Directory"
            }
        },
        "b2cSignUpPolicyId": {
            "type": "string",
            "defaultValue": "B2C_1_suppolicy2",
            "metadata": {
                "description": "Describes the B2C Sign Up policy"
            }
        },
        "b2cSignInPolicyId": {
            "type": "string",
            "defaultValue": "B2C_1_sinpolicy2",
            "metadata": {
                "description": "Describes the B2C Sign in policy"
            }
        },
        "b2cEditProfilePolicyId": {
            "type": "string",
            "defaultValue": "B2C_1_peditpolicy2",
            "metadata": {
                "description": "Describes the B2C Profile Editing policy"
            }
        },
        "b2cChangePasswordPolicy": {
            "type": "string",
            "defaultValue": "B2C_1_cpasspolicy",
            "metadata": {
                "description": "Describes the B2C Change Password policy"
            }
        },
        "webjobStorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ]
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "workspace12",
            "maxLength": 17,
            "metadata": {
                "description": "Name of the Workspace to be created"
            }
        },
        "MLskuName": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "S1",
                "S2",
                "S3"
            ],
            "metadata": {
                "description": "Pricing tier for Workspace"
            }
        }
    },
    "variables": {
        "apiVersions": {
            "computeApiVersion": "2016-04-30-preview",
            "networkApiVersion": "2016-09-01",
            "storageApiVersion": "2016-01-01",
            "deploymentApiVersion": "2016-02-01",
            "sqlServerApiVersion": "2015-05-01-preview",
            "sqlDBApiVersion": "2014-04-01-preview"
        },
        "networkSettings": {
            "location": "[resourceGroup().location]",
            "networkApiVersion": "2016-03-30",
            "virtualNetworkName": "MyVNET",
            "addressPrefix": "10.0.0.0/16",
            "subnet1Name": "subnet1",
            "subnet1Prefix": "10.0.0.0/24",
            "subnet2Name": "subnet2",
            "subnet2Prefix": "10.0.1.0/24",
            "subnet3Name": "subnet3",
            "subnet3Prefix": "10.0.2.0/24",
            "subnet4Name": "subnet4",
            "subnet4Prefix": "10.0.3.0/24",
            "subnet5Name": "subnet5",
            "subnet5Prefix": "10.0.4.0/24",
            "subnet6Name": "subnet6",
            "subnet6Prefix": "10.0.5.0/24"
        },
        "bastionServerSettings": {
            "location": "[resourceGroup().location]",
            "bastionVMName": "bastionServer",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "bastionNic": "bastion-nic",
            "bastionDiagStgAcnt": "[concat('bastionstrg',variables('suffix'))]",
            "bastionVMSize": "Standard_DS1_v2",
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest",
            "storageAccountType": "[variables('storageAccountType')]",
            "diagStorageAccountType": "Standard_LRS",
            "publicIpAddressName": "bastion-pip",
            "networkSecurityGroupName": "bastion-nsg",
            "publicIpAddressType": "Dynamic",
            "bastionDnsLabelPrefix": "[concat('bastionserver',variables('suffix'))]",
            "fileUris": "[concat(variables('baseUrl'),'scripts/psscript.ps1')]",
            "scriptFileName": "psscript.ps1",
            "domainName": "[parameters('domainName')]",
            "Username": "[parameters('adminUsername')]",
            "Password": "[parameters('adminPassword')]",
            "TenantIdentifier": "NA",
            "TenantActivationPassword": "NA",
            "ActivationPort": "[variables('heartbeatPortTrendDSM')]",
            "ManagerAddress": "[concat(variables('publicIPDomainNameLabelTrendDSM'),'.',resourceGroup().location,'.cloudapp.azure.com')]"
        },
        "MCSModules": {
            "location": "[resourceGroup().location]",
            "adNicName": "adNic",
            "splunkNicName": "splunkNic",
            "splunkNsg": "splunkNsg",
            "adNicIPAddress": "10.0.2.4",
            "splunkIPAddress": "10.0.2.5",
            "chefAutomateIPAddress": "10.0.2.6",
            "wsIPAddress": "10.0.2.7",
            "sshFrom": "0.0.0.0/0",
            "forwardedDataFrom": "0.0.0.0/0",
            "adVMName": "adServer",
            "splunkVMName": "splunkServer",
            "splunkExtensionName": "splunkExtension",
            "typeHandlerVersion": "1.5",
            "splunkImagePublisher": "splunk",
            "splunkImageOffer": "splunk-enterprise-base-image",
            "splunkImageSKU": "splunk-on-ubuntu-14-04-lts",
            "splunkImageVersion": "1.1.1",
            "Username": "[parameters('adminUsername')]",
            "Password": "[parameters('adminPassword')]",
            "domainName": "[parameters('domainName')]",
            "adExtensionName": "CreateADForest",
            "wsNsg": "ws-client-nsg",
            "chefAutoNsg": "chefauto-nsg",
            "wsNic": "ws-client-nic",
            "chefAutoNic": "chefauto-nic",
            "wsClientDns": "[concat('wsclient',substring(variables('prefix') ,0 ,5))]",
            "chefAutoDns": "[concat('chefauto',substring(variables('prefix') ,0 ,5))]",
            "scriptFileName": "psscript.ps1",
            "dnsPrefix": "[concat('adserver',variables('suffix'))]",
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest",
            "chefImagePublisher": "chef-software",
            "chefImageOffer": "chef-automate",
            "chefImageSKU": "byol",
            "chefImageVersion": "latest",
            "wsVmName": "chefworkstation",
            "chefAutoVmName": "chefautomate",
            "firstname": "chefautomate",
            "lastname": "user",
            "orguser": "orguser",
            "mailid": "orguser@gmail.com",
            "rubyPath": "/opt/chef-marketplace/embedded/bin/ruby",
            "VMSize": "Standard_DS2_v2",
            "automateLicenseUri": "",
            "storageAccountType": "Premium_LRS",
            "adNetworkSecurityGroupName": "adnsg",
            "adstorageAccountName": "[concat('adstrg',variables('suffix'))]",
            "diskCreateOption": "empty",
            "diskSizeGB": "1023",
            "trendPublisher": "trendmicro",
            "trendVMSize": "Standard_D2_v2",
            "trendVMSku": "dxxn25d2v2",
            "trendProduct": "deep-security-vm",
            "vmNameTrendDSM": "trendMicroDSM",
            "nicNameTrendDSM": "trendnic",
            "securityGroupNameTrendDSM": "trendnsg",
            "publicIPDomainNameLabelTrendDSM": "[variables('publicIPDomainNameLabelTrendDSM')]",
            "managerPortTrendDSM": "443",
            "heartbeatPortTrendDSM": "[variables('heartbeatPortTrendDSM')]",
            "vmAdminNameTrendDSM": "trend",
            "publicIPAddressNameTrendDSM": "publicIPTrendDSM",
            "vmAdminPasswordTrendDSM": "[parameters('adminPassword')]",
            "dbAdminName": "trend",
            "dbAdminPassword": "[parameters('adminPassword')]",
            "dsmAdminName": "trend",
            "dsmAdminPassword": "[parameters('adminPassword')]",
            "dbName": "dsm",
            "databaseOption": "new",
            "licenseMode": "10",
            "TenantIdentifier": "NA",
            "TenantActivationPassword": "NA",
            "ManagerAddress": "[concat(variables('publicIPDomainNameLabelTrendDSM'),'.',resourceGroup().location,'.cloudapp.azure.com')]",
            "newsqlServerName": "[tolower(concat('trend',uniquestring(resourceGroup().id),'-sql'))]",
            "azuresqlUrl": "[concat(variables('baseUrl'),'/nested/database-new.json')]",
            "fileUris": "[concat(variables('baseUrl'),'scripts/psscript.ps1')]",
            "commandToExecute": "[concat('bash node-setup.sh', ' -r ', variables('splunkServerRole'), ' -p ', parameters('adminPassword'))]",
            "splunkScriptsUrl": "[concat(variables('baseUrl'),'scripts/node-setup.sh')]",
            "dscScriptUrl": "[variables('dscScriptUrl')]",
            "updateVnetDnsUrl": "[concat(variables('baseUrl'), 'nested/vnetdns.json')]",
            "chefAutoScriptUrl1": "[concat(variables('baseUrl'),'scripts/automate_setup.rb')]",
            "workstationSetup": "[concat(variables('baseUrl'),'scripts/workstationsetup1.ps1')]",
            "workstationextensionurl": "[concat(variables('baseUrl'),'nested/workstation-extension.json')]",
            "workstationSetupUrl2": "[concat(variables('baseUrl'),'scripts/workstationsetup2.ps1')]",
            "domainJoinUrl": "[concat(variables('baseUrl'),'nested/domainjoin.json')]"
        },
        "PIAFSQLSettings": {
            "location": "[resourceGroup().location]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "networkInterfaceName": "sqlNic",
            "networkSecurityGroupName": "sqlNsg",
            "publicIpAddressName": "sqlpip",
            "sqlAuthenticationLogin": "sqluser",
            "sqlAuthenticationPassword": "Password@1234",
            "sqlStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'sqlserver')]",
            "sqlservername": "sqlServer",
            "storageAccountType": "Premium_LRS",
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2016SP1-WS2016",
            "sku": "Express",
            "version": "latest",
            "vmSize": "Standard_DS1_v2",
            "sqlConnectivityType": "Private",
            "sqlPrivateIPAddress": "10.0.3.4",
            "sqlStorageDisksCount": "1",
            "sqlStorageWorkloadType": "GENERAL",
            "sqlAutopatchingDayOfWeek": "Sunday",
            "sqlAutopatchingStartHour": "2",
            "sqlAutopatchingWindowDuration": "60",
            "sqlStorageDeploymentToken": "456",
            "scriptFileName": "psscript.ps1",
            "scriptFileName2": "defaultdb.ps1",
            "scriptFileName3": "simulatorsetup.ps1",
            "domainName": "[parameters('domainName')]",
            "Username": "[parameters('adminUsername')]",
            "Password": "[parameters('adminPassword')]",
            "baseUrl": "[variables('baseUrl')]",
            "fileUris": "[concat(variables('baseUrl'),'scripts/psscript.ps1')]",
            "fileUris2": "[concat(variables('baseUrl'),'scripts/defaultdb.ps1')]",
            "fileUris3": "[concat(variables('baseUrl'),'scripts/simulatorsetup.ps1')]",
            "sqlQueryUrl": "[concat(variables('baseUrl'),'scripts/SQLQuery2.sql')]",
            "piserverscript": "[concat(variables('baseUrl'),'scripts/PiServerSQLscript.sql')]",
            "databaseName": "iottestdb",
            "TenantIdentifier": "NA",
            "TenantActivationPassword": "NA",
            "ActivationPort": "[variables('heartbeatPortTrendDSM')]",
            "ManagerAddress": "[concat(variables('publicIPDomainNameLabelTrendDSM'),'.',resourceGroup().location,'.cloudapp.azure.com')]",
            "simulatorUrl": "https://projectiot.blob.core.windows.net/iotp2/SimulatorSetup.msi",
            "dataserviceUrl": "https://projectiot.blob.core.windows.net/iotp2/DataServiceSetup.msi",
            "PIWebApiSimulatorUrl": "https://projectiot.blob.core.windows.net/iotp2/PiWebAPISimulatorSetup.msi"
        },
        "PIDAServersettings": {
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "location": "[resourceGroup().location]",
            "PIDAVMName": "PIDAVMServer",
            "PIDANic": "PIDAVMNic",
            "PIDANetworkSecurityGroupName": "PIDANsg",
            "PIDADiagStgAcnt": "[concat(uniquestring(resourceGroup().id), 'pidavm')]",
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest",
            "PIDAVMSize": "Standard_DS1_v2",
            "storageAccountType": "[variables('storageAccountType')]",
            "diagStorageAccountType": "Standard_LRS",
            "PIDAPrivateIPAddress": "10.0.4.4",
            "scriptFileName": "psscript.ps1",
            "domainName": "[parameters('domainName')]",
            "fileUris": "[concat(variables('baseUrl'),'scripts/psscript.ps1')]",
            "Username": "[parameters('adminUsername')]",
            "Password": "[parameters('adminPassword')]"
        },
        "AzurePaasevi": {
            "location": "[resourceGroup().location]",
            "AzureSqlLogin": "sqluser",
            "AzureSqlPwd": "Password@1234",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "databaseName": "dbtest",
            "edition": "Standard",
            "requestedServiceObjectiveName": "S2",
            "maxSizeBytes": "268435456000",
            "serverName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
            "storageKeyType": "SharedAccessKey",
            "storageKey": "?"
        },
        "PIBAServersettings": {
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "location": "[resourceGroup().location]",
            "PIBAVMName": "PIBAVMServer",
            "PIBANic": "PIBAVMNic",
            "PIBANetworkSecurityGroupName": "PIBANsg",
            "PIBADiagStgAcnt": "[concat(uniquestring(resourceGroup().id), 'pibavm')]",
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest",
            "PIBAVMSize": "Standard_DS4_v2",
            "storageAccountType": "[variables('storageAccountType')]",
            "diagStorageAccountType": "Standard_LRS",
            "PIBAPrivateIPAddress": "10.0.5.4",
            "scriptFileName": "psscript.ps1",
            "domainName": "[parameters('domainName')]",
            "fileUris": "[concat(variables('baseUrl'),'scripts/psscript.ps1')]",
            "Username": "[parameters('adminUsername')]",
            "Password": "[parameters('adminPassword')]"
        },
        "heartbeatPortTrendDSM": "4120",
        "publicIPDomainNameLabelTrendDSM": "[concat('publicdnstrenddsm',variables('suffix'))]",
        "DNSServerAddress": "10.0.2.4",
        "splunkServerRole": "splunk_server",
        "storageAccountType": "Premium_LRS",
        "baseUrl": "https://raw.githubusercontent.com/sysgain/iot-automation/iot/",
        "dscScriptUrl": "https://github.com/sysgain/iot-automation/raw/iot",
        "prefix": "[uniqueString(resourceGroup().id)]",
        "deploymentApiVersion": "2016-02-01",
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('networkSettings').virtualNetworkName]",
            "apiVersion": "[variables('apiVersions').networkApiVersion]",
            "location": "[variables('networkSettings').location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('networkSettings').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('networkSettings').subnet1Name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnet1Prefix]"
                        }
                    },
                    {
                        "name": "[variables('networkSettings').subnet2Name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnet2Prefix]"
                        }
                    },
                    {
                        "name": "[variables('networkSettings').subnet3Name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnet3Prefix]"
                        }
                    },
                    {
                        "name": "[variables('networkSettings').subnet4Name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnet4Prefix]"
                        }
                    },
                    {
                        "name": "[variables('networkSettings').subnet5Name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnet5Prefix]"
                        }
                    },
                    {
                        "name": "[variables('networkSettings').subnet6Name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnet6Prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "MCSModules",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('networkSettings').virtualNetworkName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/mcs.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "MCSModules": {
                        "value": "[variables('MCSModules')]"
                    },
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('DNSServerAddress')]"
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "BastionHost",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "MCSModules"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/bastionServer.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "bastionServerSettings": {
                        "value": "[variables('bastionServerSettings')]"
                    },
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "PIComponents",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "MCSModules"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/piComponents.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "PIAFSQLSettings": {
                        "value": "[variables('PIAFSQLSettings')]"
                    },
                    "PIDAServersettings": {
                        "value": "[variables('PIDAServersettings')]"
                    },
                    "PIBAServersettings": {
                        "value": "[variables('PIBAServersettings')]"
                    },
                    "networkSettings": {
                        "value": "[variables('networkSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "AzuresqlServerSetup",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "PIComponents"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/azurepaas.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "AzurePaasevi": {
                        "value": "[variables('AzurePaasevi')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUserName')]"
        },
        "adminPassword": {
            "type": "string",
            "value": "[parameters('adminPassword')]"
        },
        "bastionFQDN": {
            "type": "string",
            "value": "[reference('BastionHost').outputs.bastionFQDN.value]"
        },
        "adServerIP": {
            "type": "string",
            "value": "[variables('MCSModules').adNicIPAddress]"
        },
        "workstationIPAddress": {
            "type": "string",
            "value": "[variables('MCSModules').wsIPAddress]"
        },
        "splunkIPAddress": {
            "type": "string",
            "value": "[variables('MCSModules').splunkIPAddress]"
        },
        "chefAutomateIPAddress": {
            "type": "string",
            "value": "[variables('MCSModules').chefAutomateIPAddress]"
        },
        "trendFQDN": {
            "type": "string",
            "value": "[variables('bastionServerSettings').ManagerAddress]"
        }
    }
}